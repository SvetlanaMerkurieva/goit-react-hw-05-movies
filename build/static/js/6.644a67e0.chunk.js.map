{"version":3,"sources":["components/Cast/Cast.jsx","components/Cast/Cast.module.css"],"names":["Cast","movieId","useParams","useState","actors","setActors","error","setError","useEffect","fetch","then","res","ok","json","Promise","reject","Error","cast","catch","e","console","log","className","s","div","message","map","actor","item","image","src","profile_path","alt","name","original_name","character","id","module","exports"],"mappings":"uOAIaA,EAAO,WAClB,IAAQC,EAAYC,cAAZD,QAER,EAA4BE,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA0BF,mBAAS,MAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,qBAAU,WACRC,MAAM,sCAAD,OACmCR,EADnC,qEAGFS,MAAK,SAAAC,GACJ,OAAIA,EAAIC,GACCD,EAAIE,OAENC,QAAQC,OAAO,IAAIC,MAAJ,+KAEvBN,MAAK,SAAAN,GAAM,OAAIC,EAAUD,EAAOa,SAChCC,OAAM,SAAAC,GAAC,OAAIZ,EAASY,QACtB,CAAClB,IAEJmB,QAAQC,IAAIjB,GAGV,sBAAKkB,UAAWC,IAAEC,IAAlB,UACGlB,GAAS,6BAAKA,EAAMmB,UACpBrB,GACC,yBAASkB,UAAWC,IAAEnB,OAAtB,SACGA,EAAOsB,KAAI,SAAAC,GAAK,OACf,sBAAKL,UAAWC,IAAEK,KAAlB,UACE,qBACEN,UAAWC,IAAEM,MACbC,IAAG,yCAAoCH,EAAMI,cAC7CC,IAAKL,EAAMM,OAEb,6BAAKN,EAAMO,gBACX,4CAAeP,EAAMQ,eAPMR,EAAMS,c,mBC/B/CC,EAAOC,QAAU,CAAC,IAAM,kBAAkB,OAAS,qBAAqB,KAAO,mBAAmB,MAAQ","file":"static/js/6.644a67e0.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport s from './Cast.module.css';\r\n\r\nexport const Cast = () => {\r\n  const { movieId } = useParams();\r\n\r\n  const [actors, setActors] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=597522cf6881ad12863cfcef806a7c6d&language=en-US`,\r\n    )\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(new Error(`К сожалению, описания фильма нет`));\r\n      })\r\n      .then(actors => setActors(actors.cast))\r\n      .catch(e => setError(e));\r\n  }, [movieId]);\r\n\r\n  console.log(actors);\r\n\r\n  return (\r\n    <div className={s.div}>\r\n      {error && <h1>{error.message}</h1>}\r\n      {actors && (\r\n        <section className={s.actors}>\r\n          {actors.map(actor => (\r\n            <div className={s.item} key={actor.id}>\r\n              <img\r\n                className={s.image}\r\n                src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\r\n                alt={actor.name}\r\n              ></img>\r\n              <h3>{actor.original_name}</h3>\r\n              <p>Character: {actor.character}</p>\r\n            </div>\r\n          ))}\r\n        </section>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"Cast_div__3TPNa\",\"actors\":\"Cast_actors__3bTCF\",\"item\":\"Cast_item__3zBM0\",\"image\":\"Cast_image__13KPr\"};"],"sourceRoot":""}